{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/';\n  }\n  CreateUser(email, password) {\n    const loginData = {\n      email: email,\n      password: password\n    };\n    this.http.post(\"http://localhost:3000/\", loginData).subscribe(response => {\n      console.log(response);\n    });\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ApiService","constructor","http","baseUrl","CreateUser","email","password","loginData","post","subscribe","response","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\riddhesh\\FinalYearProject\\final\\frontend\\TravelMonde\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { LoginData } from '../models/login.model';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n\t\tbaseUrl='http://localhost:3000/';\r\n\r\n        constructor (private http:HttpClient) {\r\n            \r\n        }\r\n           CreateUser(email: string, password: string){  \r\n        const loginData: LoginData = {email: email, password: password} \r\n     \r\n            this.http.post(\"http://localhost:3000/\",loginData)\r\n            .subscribe(response =>{  \r\n                console.log(response);  \r\n            })  \r\n        }          \r\n\r\n\r\n        // getTypeRequest(url) {\r\n        //     return this.http.get(`${this.baseUrl}${url}`).pipe(map(res => {\r\n        //     return res;\r\n        //     }));\r\n        //     }\r\n        //     postTypeRequest(url, payload) {\r\n        //     return this.http.post(`${this.baseUrl}${url}`, payload).pipe(map(res => {\r\n        //     return res;\r\n        //     }));\r\n        //     }\r\n        //     putTypeRequest(url, payload) {\r\n        //     return this.http.put(`${this.baseUrl}${url}`, payload).pipe(map(res => {\r\n        //     return res;\r\n        //     }));\r\n        //     }\r\n\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,UAAU;EAIfC,YAAqBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAF/B,KAAAC,OAAO,GAAC,wBAAwB;EAI1B;EACGC,UAAUA,CAACC,KAAa,EAAEC,QAAgB;IAC7C,MAAMC,SAAS,GAAc;MAACF,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAC;IAE3D,IAAI,CAACJ,IAAI,CAACM,IAAI,CAAC,wBAAwB,EAACD,SAAS,CAAC,CACjDE,SAAS,CAACC,QAAQ,IAAG;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACzB,CAAC,CAAC;EACN;;AAdKV,UAAU,C;mBAAVA,UAAU,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVhB,UAAU,C;SAAVA,UAAU;EAAAiB,OAAA,EAAVjB,UAAU,CAAAkB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}