{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = \"http://localhost:3000/user\";\n  }\n  singup(user) {\n    console.log(user);\n    return this.http.post(`${this.apiServerUrl}/register`, user);\n  }\n  login(user) {\n    console.log(user);\n    return this.http.post(`${this.apiServerUrl}/login`, user);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","apiServerUrl","singup","user","console","log","post","login","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\riddhesh\\FinalYearProject\\final\\frontend\\TravelMonde\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/userModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  \n\n  private apiServerUrl =  \"http://localhost:3000/user\"\n\n  constructor (private http:HttpClient) {\n      \n}\n\n  singup(user: User): Observable<User> {\n     \n      console.log(user)\n      return  this.http.post<User>(`${this.apiServerUrl}/register`,user)\n     \n  }\n\n\n  login(user:User): Observable<User> {\n      console.log(user)\n\n      return this.http.post<User>(\n          `${this.apiServerUrl}/login`,\n          user\n        );\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAMtBC,YAAqBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFjB,KAAAC,YAAY,GAAI,4BAA4B;EAItD;EAEEC,MAAMA,CAACC,IAAU;IAEbC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,OAAQ,IAAI,CAACH,IAAI,CAACM,IAAI,CAAO,GAAG,IAAI,CAACL,YAAY,WAAW,EAACE,IAAI,CAAC;EAEtE;EAGAI,KAAKA,CAACJ,IAAS;IACXC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAEjB,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CACjB,GAAG,IAAI,CAACL,YAAY,QAAQ,EAC5BE,IAAI,CACL;EACP;;AAzBWL,WAAW,C;mBAAXA,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXb,WAAW,C;SAAXA,WAAW;EAAAc,OAAA,EAAXd,WAAW,CAAAe,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}